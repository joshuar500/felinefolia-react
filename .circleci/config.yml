version: 2
jobs:
  checkout_code:
    docker:
      - image: circleci/node:latest
    working_directory: ~/felinefolia-react
    steps:
      - checkout
      - attach_workspace:
          at: ~/felinefolia-react
      - restore_cache:
          keys:
            - yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-cache-{{ .Branch }}
            - yarn-cache-
      - run: yarn install
      - save_cache:
          key: yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths: node_modules
      - persist_to_workspace:
          root: .
          paths: .
  check_vulnerabilities:
    docker:
      - image: circleci/node:latest
    working_directory: ~/felinefolia-react
    steps:
      - attach_workspace:
          at: ~/felinefolia-react
      - run: yarn install
      - run: |
            if [ "${CIRCLE_BRANCH}" == "production" ]; then
              yarn validate:dependencies
            else
              yarn validate:dependencies || true
            fi
  # test_and_report:
  #   docker:
  #     - image: circleci/node:latest
  #   working_directory: ~/felinefolia-react
  #   steps:
  #     - attach_workspace:
  #         at: ~/felinefolia-react
  #     - run: yarn install
  #     - run: CI=true yarn test
  #     - store_artifacts:
  #         path: ./coverage/clover.xml
  #         prefix: tests
  #     - store_artifacts:
  #         path: coverage
  #         prefix: coverage
  #     - store_test_results:
  #         path: ./coverage/clover.xml
  build:
    docker:
      - image: circleci/node:latest
    working_directory: ~/felinefolia-react
    steps:
      - attach_workspace:
          at: ~/felinefolia-react
      - run: yarn install
      - run:
          name: yarn build
          command: |
            if [ "${CIRCLE_BRANCH}" == "production" ]; then
              CI=true PUBLIC_URL=https://felinefolia-react-production.now.sh yarn build
            elif [ "${CIRCLE_BRANCH}" == "development" ]; then
              CI=true PUBLIC_URL=https://felinefolia-react-alpha.now.sh yarn build
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              CI=true PUBLIC_URL=https://felinefolia-react-beta.now.sh yarn build
            else
              echo "This failed miserably!"
            fi
      - persist_to_workspace:
          root: .
          paths: .
  deployment:
    docker:
      - image: circleci/node:latest
    working_directory: ~/felinefolia-react
    steps:
      - add_ssh_keys:
          fingerprints:
            - "fd:cc:de:48:c6:21:94:bb:6d:bc:71:ef:9a:52:e5:bb"
      - attach_workspace:
          at: ~/felinefolia-react
      - run:
           name: Add FelineFolia to known hosts
           command: ssh-keyscan -H ${SSH_SERVER} >> ~/.ssh/known_hosts
      - deploy:
          name: Deploy & Alias.
          command: |
            if [ "${CIRCLE_BRANCH}" == "production" ]; then
              now build -t ${NOW_TOKEN} -n=felinefolia-react --static
              now -t ${NOW_TOKEN} alias felinefolia-react-production.now.sh
            elif [ "${CIRCLE_BRANCH}" == "development" ]; then
              now build -t ${NOW_TOKEN} -n=felinefolia-react --static
              now -t ${NOW_TOKEN} alias felinefolia-react-alpha.now.sh
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "Building Master Branch!"
              ssh ${SSH_USER}@${SSH_SERVER} 'pm2 delete all && cd ~/felinefolia-react && git pull origin master && npm install && npm build && pm2 serve build --port 3000'
            else
              echo "This failed miserably!"
            fi
workflows:
  version: 2
  test_build_deploy:
    jobs:
      - checkout_code
      - check_vulnerabilities:
          requires:
            - checkout_code
      # - test_and_report:
      #     requires:
      #       - checkout_code
      - build:
          requires:
            - checkout_code
          filters:
            branches:
              only:
                - development
                - master
                - production
      - deployment:
          requires:
            - check_vulnerabilities
            # - test_and_report
            - build
          filters:
            branches:
              only:
                - development
                - master
                - production